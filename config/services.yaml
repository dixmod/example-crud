# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.admin_email: "%env(variable_name)%"

services:
  _defaults:
    autowire: true
    autoconfigure: true

  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  App\Service\Common\RepositoryResolver:
    class: App\Service\Common\RepositoryResolver
    arguments: [ "@doctrine.orm.entity_manager" ]

  App\EventListener\ApiResponseListener:
    tags:
      - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException', priority: 100010 }

  App\Support\Logger\DcLogger:
    arguments:
      $requestIdHeader: 'X-Request-Id'

  Psr\Log\LoggerInterface $logger: '@App\Support\Logger\DcLogger'

  App\EventListener\LogRequestListener:
    arguments:
      - '@App\Support\Logger\DcLogger'
      - [ '/api' ]
      - [ '/api/dcService/find' ]

  Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
    arguments:
      - '@Redis'
      - { 'prefix': 'dc-cia-additional-product-store-%env(APP_ENV)%-session_', 'ttl': 3600 }

  Redis:
    class: Redis
    factory: ['@App\Infrastructure\RedisAdapter', 'createConnection']
    public: true
    arguments:
      - '%env(REDIS_HOST)%'
